{"version":3,"sources":["Componnent/ContactForm.js","Componnent/ListContact.js","Componnent/Filtr.js","App.js","index.js"],"names":["ContactForm","state","contacts","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","evt","preventDefault","props","onAddContact","this","onSubmit","type","pattern","title","required","onChange","React","Component","ListContact","onRemoveContact","map","contact","className","onClick","id","FilterContacts","onChangeFilter","target","App","filter","addContact","task","cont","includes","alert","length","shortid","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e566a588.chunk.js","sourcesContent":["import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends React.Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = evt => {\n    evt.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { handleSubmit, handleChange } = this;\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ListContact = ({ contacts, onRemoveContact }) => (\n  <ul>\n    {contacts.map(contact => (\n      <li key={contact.id}>\n        {contact.name + ':' + contact.number}\n        {\n          <button\n            className=\"button_delete\"\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nListContact.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ListContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FilterContacts({ value, onChangeFilter }) {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilterContacts.propTypes = {\n  value: PropTypes.string.isRequired,\n  onchangeFilter: PropTypes.func,\n};\n","import { Component } from 'react';\nimport shortid from 'shortid';\nimport CssModule from './IndexModule.css';\n\nimport ContactForm from './Componnent/ContactForm';\nimport ContactList from './Componnent/ListContact';\nimport Filter from './Componnent/Filtr';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = task => {\n    const searchSameName = this.state.contacts\n      .map(cont => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert('Fields must be filled!');\n    } else {\n      const contact = {\n        ...task,\n        id: shortid(),\n      };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const { addContact, changeFilter, removeContact } = this;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={changeFilter} />\n        {visibleContacts.length && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}